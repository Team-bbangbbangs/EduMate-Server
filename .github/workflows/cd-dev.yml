name: CI/CD - Build and Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - feat/EDMT-78

jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set timezone to Korea
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Seoul"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Gradle 캐시 구성
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application-dev.yml
        shell: bash

      - name: Build Spring Boot Jar
        run: ./gradlew bootJar

      - name: Get current date and time
        id: datetime
        run: |
          echo "datetime=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-dev
          push: true
          tags: ${{ secrets.DOCKER_REPO_NAME }}:dev-${{ steps.datetime.outputs.datetime }}
          build-args: JAR_FILE=build/libs/app.jar

      - name: Upload docker-compose yml script to artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: ${{ github.workspace }}/docker-compose.dev.yml

    outputs:
      BUILD_VERSION: ${{ steps.datetime.outputs.datetime }}

  deploy:
    environment: dev
    runs-on: [self-hosted, be-dev]
    needs: build

    steps:
      - name: Set docker-compose YML script to runner
        uses: actions/download-artifact@v4
        with:
          name: docker-compose
          path: ${{ github.workspace }}

      - name: Extract secrets as .env file
        run: |
          cat <<EOF > .env
          DOCKER_REPO_NAME=${{ secrets.DOCKER_REPO_NAME }}
          DOCKER_IMAGE_VERSION_TAG=dev-${{ needs.build.outputs.BUILD_VERSION }}
          EOF

      - name: Stop and remove existing application container
        run: sudo docker-compose -f docker-compose.dev.yml down --rmi all

      - name: Run application Server container
        run: sudo docker-compose -f docker-compose.dev.yml up -d
